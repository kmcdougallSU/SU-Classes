1. (3 points) In your own words, how often should memory compaction/relocation be performed? Describe the advantages and disadvantages of performing it even more often than recommended.

    (a). Memory compaction / relocation should be performed when a few different scenarios / factors occur.

        1. When a significant amount of memory has been allocated but with large amounts of fragmentation is occurring.

            (a). more so if there are jobs waiting on allocation but no contiguous memory is available due to fragmentation.
        3. After a set amount of time has elapsed
            (a). Setting compaction to occur at regular intervals to help with fragmentation is a good idea. However, it should be tied into system load to avoid performance overhead.

    (b). Advantages of frequent memory compaction

        1. Reduces overall fragmentation, helping with allocation efficiency.
        2. Improves performance for programs that have a higher than average allocation and de-allocation rates.

    (c). Disadvantages of frequent memory compaction
        1. Can lead to performance overhead if it is performed more than necessary.
        2. Could delay memory allocation requests



2. (2 points) Give an example of computing circumstances that would favor first-fit allocation over best-fit. Explain your answer.

    (a). Smaller jobs that do not require much memory and are quick to execute would favor first-fit allocation over best-fit.
    (b). This will increase performance as first-fit does not have to search through each slot to find the optimal location; as with small jobs, the benefit of finding the optimal slot is often not worth it.


3. (3 points) We described one of several ways to compact memory. Some people suggest an alternate method: all jobs could be copied to a secondary storage device and then reloaded (and relocated) contiguously into main memory, thus creating a single free block after all jobs have been recopied into memory. Is this viable?

    (a). If the relocation is static and done at assembly or load time, compaction is not possible. Compaction may only occur if relocation is both dynamic and done at the time of execution. However, if addresses are relocated dynamically it is viable.
    (b). There are downsides to this approach as it could lead to performance overhead and system downtime.
        1. copying every single active job could be very time-consuming and resource intensive
        2. Not viable for real-time or high-availability systems as they can not for whatever reason have any downtime



4. If a program has 471 bytes and will be loaded into page frames of 126 bytes each, assuming the job begins loading at the first page (Page 0) in memory, and the instruction to be used is at byte 132, answer the following questions:

   A. (3 points) How many pages are needed to store the entire job? Is there any fragmentation? If yes, which type & how much?
        1. four pages are needed to store the entire job. There is internal fragmentation of 33 bytes.

   B. (3 points) Compute the page number and exact displacement for each of the byte addresses where the desired data is stored.
        1. byte at address 132, page number 1 which is 6 bytes from the start of the page.


5. This exercise explores bit shifting. By examining the reference bits for the pages shown as follows, answer these questions.

    A. (3 points) Identify which one of the pages was referenced most often as of the last time snapshot Time 6
        - page 3, as it has the most '1's or reference bits. (page 4 also has the same amount)

    B. (3 points) Which page was referenced least often?
        - page 1

    C. (3 points) Which page was referenced least often as of Time 3. Explain your reasoning.
        - still page 1 as it had the least '1's in the reference bit pattern up to page 3

6. Given that main memory is composed of four page frames, use the following table to answer all parts of this problem:
   Pasted Graphic 5.png

   A. (3 points) The contents of which page frame would be swapped out by FIFO (First In First Out)?
        - frame 0

   B. (3 points) The contents of which page frame would be swapped out by LRU (Least Recently Used)?
        - frame 2

   C. (3 points) The contents of which page frame would be swapped out by MRU (Most Recently Used)?
        - frame 3

   D. (3 points) The contents of which page frame would be swapped out by LFU (Least Frequently Used)?
        - frame 0